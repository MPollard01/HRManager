@model PayrollEmployeeViewVM

@{
    ViewData["Title"] = "Payroll";

    var dateSortIcon = ViewData["DateSortParm"] == "Date" ? "bi-sort-up" : "bi-sort-down";
    var payIcon = ViewData["PaySortParm"] == "Pay" ? "bi-sort-numeric-up" : "bi-sort-numeric-down";
    var dateSortHighlight = ViewData["CurrentSort"]?.ToString() == "Date" || ViewData["CurrentSort"]?.ToString() == "date_desc" ? "" : "sort-icon";
    var paySortHighlight = ViewData["CurrentSort"]?.ToString() == "Pay" || ViewData["CurrentSort"]?.ToString() == "pay_desc" ? "" : "sort-icon";
}

<header class="d-flex align-items-center justify-content-between bg-white p-3 shadow-sm">
    <div class="d-flex gap-2">
        <span class="bg-info p-2 rounded"><i class="bi bi-currency-pound text-light"></i></span>
        <h3 class="text-dark">Payroll</h3>
    </div>
</header>
<br />
<section class="container">
    <div class="accordion" id="accordionExample">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Account Details
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>National Insurance No.</th>
                                <th>Tax Code</th>
                                <th>Bank Name</th>
                                <th>Bank Address</th>
                                <th>Account Name</th>
                                <th>Account Number</th>
                                <th>Sort Code</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Model.PayrollEmployee.NINumber</td>
                                <td>@Model.PayrollEmployee.TaxCode</td>
                                <td>@Model.PayrollEmployee.BankName</td>
                                <td>@Model.PayrollEmployee.BankAddress</td>
                                <td>@Model.PayrollEmployee.AccountName</td>
                                <td>@Model.PayrollEmployee.AccountNumber</td>
                                <td>@Model.PayrollEmployee.SortCode</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div>
        <table class="table table-hover border rounded table-striped">
            <thead class="bg-white">
                <tr>
                    <th>Period Number</th>
                    <th>Pay Run</th>
                    <th><a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Pay Period End <i class="bi @dateSortIcon @dateSortHighlight"></i></a></th>
                    <th><a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["PaySortParm"]">Net Pay <i class="bi @payIcon @paySortHighlight"></i></a></th>
                </tr>
            </thead>
            <tbody>
                @foreach(var payroll in Model.Payrolls)
                {
                    <tr>
                        <td>@payroll.PeriodNumber</td>
                        <td>@payroll.PayRun</td>
                        <td>@payroll.PayPeriodEnd.ToShortDateString()</td>
                        <td>@payroll.NetPay.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <br />
    <br />

    @{
        var prevDisabled = !Model.Payrolls.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Payrolls.HasNextPage ? "disabled" : "";

        int next = Model.Payrolls.PageIndex + 1;
        int prev = Model.Payrolls.PageIndex - 1;
    }

    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item @prevDisabled"><a class="page-link" asp-action="Index" asp-route-pageNumber="@prev" asp-route-sortOrder="@ViewData["CurrentSort"]">Previous</a></li>
            @for (int i = 1; i <= Model.Payrolls.TotalPages; i++)
            {
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-sortOrder="@ViewData["CurrentSort"]">@i</a></li>
            }
            <li class="page-item @nextDisabled"><a class="page-link" asp-action="Index" asp-route-pageNumber="@next" asp-route-sortOrder="@ViewData["CurrentSort"]">Next</a></li>
        </ul>
    </nav>
</section>
