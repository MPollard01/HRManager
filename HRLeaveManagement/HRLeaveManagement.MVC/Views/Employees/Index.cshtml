@model HRLeaveManagement.MVC.Helpers.PaginatedList<EmployeeDetailsVM>

@{
    ViewData["Title"] = "Index";
}

<header class="d-flex align-items-center justify-content-start gap-5 bg-light p-3 shadow-sm">
    <div class="d-flex gap-2">
        <span class="bg-info p-2 rounded"><i class="bi bi-person-fill text-light"></i></span>
        <h3 class="text-dark">Employees</h3>
    </div>
    <div class="w-50">
        <form role="search">
            <div class="input-group">
                <input class="form-control" name="searchString" value="@ViewData["CurrentFilter"]" type="search" placeholder="Search" aria-label="Search" aria-describedby="addon" style="border-radius: 15px 0 0 15px">
                <button class="btn btn-light input-group-text" id="addon" type="submit" style="border-radius: 0 15px 15px 0"><i class="bi bi-search"></i></button>
            </div>
        </form>
    </div>
</header>

@{
    var nameSortIcon = ViewData["NameSortParm"] == "Name" ? "bi-sort-alpha-down" : "bi-sort-alpha-up";
    var nameSortHighlight = ViewData["CurrentSort"]?.ToString() == "Name" || ViewData["CurrentSort"]?.ToString() == "name_desc" ? "" : "sort-icon";
}

<br/>
<table class="table table-striped table-hover border rounded">
    <thead>
        <tr>
            <th>ID</th>
            <th>First Name</th>
            <th><a class="page-link" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Last Name <i class="bi @nameSortIcon @nameSortHighlight"></i></a></th>
            <th>Email</th>
            <th>Days Allocated</th>
            <th>Leave Requests</th>
            <th>Time Entries</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>@item.Employee.Id</td>
            <td>@item.Employee.Firstname</td>
            <td>@item.Employee.Lastname</td>
            <td>@item.Employee.Email</td>
            <td>@item.NumberOfDays</td>
            @if(item.HasRequests > 0)
            {
                <td>
                    <a asp-action="Index" asp-controller="LeaveRequest" asp-route-id="@item.Employee.Id" class="btn btn-primary position-relative">
                        Requests
                        <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
                            @item.HasRequests
                            <span class="visually-hidden">New alerts</span>
                        </span>
                    </a>
                </td>
            }
            else
            {
                <td>
                    <a asp-action="Index" asp-controller="LeaveRequest" asp-route-id="@item.Employee.Id"  class="btn btn-primary">
                        Requests
                    </a>
                </td>
            }
                @if (item.TimeEntries > 0)
                {
                    <td>
                        <a asp-action="Employees" asp-controller="TimeEntry" class="btn btn-primary position-relative">
                            Entries
                            <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                @item.TimeEntries
                                <span class="visually-hidden">New alerts</span>
                            </span>
                        </a>
                    </td>
                }
                else
                {
                    <td>
                        <a asp-action="Employees" asp-controller="TimeEntry" class="btn btn-primary">
                            Entries
                        </a>
                    </td>
                }
        </tr>
}
    </tbody>
</table>

<br />
<br />

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    int next = Model.PageIndex + 1;
    int prev = Model.PageIndex - 1;
}

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-action="Index" asp-route-pageNumber="@prev" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a></li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item"><a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a></li>
        }
        <li class="page-item @nextDisabled"><a class="page-link" asp-action="Index" asp-route-pageNumber="@next" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a></li>
    </ul>
</nav>